name: 'Perform Test Coverage'
description: 'Runs tests, extracts coverage data, publishes it to NOCODB and Codecov server'
inputs:
  NOCODB_TOKEN:
    description: 'Token for NOCODB API authentication'
    required: true
  CODECOV_TOKEN:
    description: 'Token for Codecov API authentication'
    required: true
  REPO_NAME:
    description: 'Name of the repository'
    required: true
  BRANCH_NAME:
    description: 'Name of the branch'
    required: true
  COVERAGE_FILE_PATH:
    description: 'Path to the cobertura.xml'
    required: true
  COVERAGE_FILE_FORMAT:
    description: 'Format of the coverage file, can be either "cobertura" or "scoverage"'
    required: true
  LINE_RATE_GREP_COMMAND:
    description: 'Grep command to extract line rate from the coverage report'
    required: true
  STATEMENT_RATE_GREP_COMMAND:
    description: 'Grep command to extract statement rate from the coverage report'
    required: true  
outputs: {}
runs:
  using: 'composite'
  steps:
   
    - name: Extract coverage data and publish to NOCODB
      run: |
        echo "start"
        if [ "${{ inputs.COVERAGE_FILE_FORMAT }}" = "cobertura" ]
        then
          COVERAGE_PERCENTAGE=$(cat ${{ inputs.COVERAGE_FILE_PATH }} | ${{ inputs.LINE_RATE_GREP_COMMAND }})
        elif [ "${{ inputs.COVERAGE_FILE_FORMAT }}" = "scoverage" ]
        then
          COVERAGE_PERCENTAGE=$(cat ${{ inputs.COVERAGE_FILE_PATH }} | ${{ inputs.STATEMENT_RATE_GREP_COMMAND }})
        echo $COVERAGE_PERCENTAGE
        JSON_PAYLOAD="{\"repository\": \"${{ inputs.REPO_NAME }}\", \"branch\": \"${{ inputs.BRANCH_NAME }}\", \"coverage\": \"$COVERAGE_PERCENTAGE\"}"
        echo $JSON_PAYLOAD 
        curl -v -k -X POST -H "xc-token: ${{ inputs.NOCODB_TOKEN }}" -H "Content-Type: application/json" -d "$JSON_PAYLOAD" https://nocodb.k8s.development.atacng.atacama.de/api/v2/tables/m6tnt0gaafb51hn/records
      shell: bash
      
      env:
        NOCODB_TOKEN: ${{ inputs.NOCODB_TOKEN }}

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ inputs.CODECOV_TOKEN }}
        
